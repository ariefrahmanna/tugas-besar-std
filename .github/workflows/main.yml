name: "CodeQL #2"

on:
  push:
  pull_request: {}

jobs:
  analyze:
    name: Analyze (${{ matrix.language }})
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read
      
    env:  
      CODEQL_ACTION_EXPORT_ARTIFACT: resultz.sarif
      
    strategy:
      fail-fast: false
      matrix:
        include:
        - language: actions
          build-mode: none
        - language: cpp
          build-mode: none

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        build-mode: ${{ matrix.build-mode }}

    - if: matrix.build-mode == 'manual'
      shell: bash
      run: |
        echo 'If you are using a "manual" build mode for one or more of the' \
          'languages you are analyzing, replace this with the commands to build' \
          'your code, for example:'
        echo '  make bootstrap'
        echo '  make release'
        exit 1

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{ matrix.language }}"

    - name: Save SARIF results as artifact
      uses: actions/upload-artifact@v4
      with:
        name: resultz-${{ matrix.language }}
        path: resultz.sarif

    - name: Publish CodeQL SARIF Summary
      shell: bash
      run: |
        if [[ -s resultz.sarif ]]; then
          echo "### ðŸ§ª CodeQL Findings for ${{ matrix.language }}" >> $GITHUB_STEP_SUMMARY
          echo "<details><summary>Click to expand</summary>" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo '| Rule ID | Message | File | Line |' >> $GITHUB_STEP_SUMMARY
          echo '|---------|---------|------|------|' >> $GITHUB_STEP_SUMMARY
    
          jq -r '
            .runs[].results[] |
            "| \(.ruleId) | \(.message.text | gsub("\n"; " ")) | \(.locations[0].physicalLocation.artifactLocation.uri) | \(.locations[0].physicalLocation.region.startLine) |"
          ' resultz.sarif >> $GITHUB_STEP_SUMMARY
    
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "</details>" >> $GITHUB_STEP_SUMMARY
        else
          echo "No SARIF file found (resultz.sarif)"
        fi


